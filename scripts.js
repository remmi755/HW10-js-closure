function sum(x) {
    return function(y) {
        return x + y
    }
}

const sum1 = sum(1);
sum1(2);
sum(1)(2);

for (var i = 1; i <= 10; i++) {          //1. Изменить i = 1 и i <= 10
    (function(e) {               // 2. console.log напечатает цифру 10 десять раз,потому что ссылка i
        setTimeout(function() {  // берет значение из цикла когда он уже отработает и значение будет равно 10
            console.log(e);             // т,к переменные переопределяются во время каждой итерации - каждая итерация
        }, 0);                  // выполняется без собственной локальной области видимости
    })(i);                            //  Пример 1. здесь создаем анонимную фунцию-оболочку, которая вызывается сразу и создает шаблон для одной итерации.
}                                       //        Т.е создаем новое замыкание для каждой итерации,
                                      //         что позволяет создавать локальные переменные итерации.

for (let i = 1; i <= 10; i++) {         // Пример 2. Меняем var на let . что
    setTimeout(function() {      //          создает новую локальную переменную для каждой итерации,
        console.log(i);                 //          что делает его повторно используемым после завершения цикла
    }, 0);
}

